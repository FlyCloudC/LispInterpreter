3.1
(define pi 3.14) ; 给 3.14 起名为 pi
(* pi (* 2 10)) ; 相当于 (* 3.14 (* 2 10))
(define C (* pi (* 2 10))) ; 计算半径为 10 的圆的周长，起名为 C
---

3.2
(define (square x) (* x x))
(square 5) ; 相当于 (* 5 5)，得到 25
---

4.1
(= (+ 1 2) 4)
; 先化简 (+ 1 2)，按照 + 的规则，将 1 和 2 相加，于是整个式子化简为
(= 3 4)
; 按照 > 的规则，将 3 与 4 比较，由于 3 = 4 不成立，得到
#f
---

4.2
(define (square x) (* x x)) ; 定义一个过程 square

(square (+ 2 3)) ; 这是一个过程调用
; 先化简 (+ 2 3) ，得到
(square 5)
; square 是先前定义的过程，于是先查看 square 的定义：
; (define (square x) (* x x))
; 这里 [body] 为 (* x x)，将 x 替换为 5，得到
(* 5 5)
; 最后化简得到
25
---

5.1
(define (fact n)
  (if (= n 1)
      1
      (* n (fact (- n 1)))))
---

5.2
(fact 3)
; 代入 fact 的定义
(if (= 3 1)
    1
    (* 3 (fact (- 3 1))))
; 由于 (= 3 1) 为 #f，所以 if表达式 化简成 后一个分支
(* 3 (fact (- 3 1)))
;
(* 3 (fact 2))
; 代入 fact 的定义
(* 3 (if (= 2 1)
         1
         (* 2 (fact (- 2 1)))))
; 由于 (= 2 1) 为 #f，所以 if表达式 化简成 后一个分支
(* 3
   (* 2 (fact (- 2 1))))
;
(* 3
   (* 2 (fact 1)))
; 代入 fact 的定义
(* 3
   (* 2
      (if (= 1 1)
          1
          (* 1 (fact (- 1 1))))))
; 由于 (= 1 1) 为 #t，所以 if表达式 化简成 前一个分支
(* 3
   (* 2
      1))
;
6
